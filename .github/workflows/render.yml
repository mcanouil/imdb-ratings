on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - main
    paths:
      - data/theatres.csv
  workflow_dispatch:

name: Render

jobs:
  render:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.github_token }}
      BRANCH: ci/render-figures
      COMMIT: "ci: automatic figure rendering"
    steps:
      - uses: actions/checkout@v5

      - name: Create GitHub App token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_KEY }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
      - name: Git Config
        shell: bash
        run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'

      - name: Checkout/Create branch
        shell: bash
        run: |
          if git show-ref --quiet refs/heads/${BRANCH}; then
            echo "Branch ${BRANCH} already exists."
            git branch -D "${BRANCH}"
            git push origin --delete "${BRANCH}"
          fi
          git checkout -b "${BRANCH}"

      - name: Install R
        uses: r-lib/actions/setup-r@v2

      - name: Install R packages
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          packages: |
            any::here
            any::data.table
            any::ggplot2
            any::ggtext
            any::scales
            any::lubridate
            any::showtext
            any::svglite
            any::jsonlite
            any::rvest
      
      - name: Render figures
        shell: bash
        run: Rscript scripts/imdb-ratings.r
      
      - name: Commit
        shell: bash
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          git add media/*
          git commit -m "${COMMIT}"
      
      - name: Push changes
        shell: bash
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          git push --force origin ${BRANCH}
      
      - name: Create Pull Request
        shell: bash
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          gh pr create --fill-first --base "main" --head "${BRANCH}" --label "Type: CI/CD :robot:"

      - name: Merge Pull Request
        shell: bash
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          gh pr merge --auto --squash
